#include "MD/MD.nsh"
#include "Card/Card.nsh"
#include "processors/tut/tut.nsh"
#include "HEX/HEX.inc"
#include "DE10lite.nsh"
#include "NegEdge/NegEdge.nsh"

module DE10lite {
  // MD md;
  // Card card;
  NegEdge neg;
  tut processor;
  HEX hex1, hex0;
  mem dmem[256][8];
  proc_name imem_read();


  //LEDR = {ARDUINO_IO_8,
  //                ARDUINO_IO_7,
  //                ARDUINO_IO_6,
  //                ARDUINO_IO_5,
  //                ARDUINO_IO_4,
  //                ARDUINO_IO_3,
  //                ARDUINO_IO_2,
  //                ARDUINO_IO_1,
  //                ARDUINO_IO_0};


  // motor driver
  // md.ref = card.ref;
  // GPIO0 = md.vref;
  // GPIO1 = md.in1;
  // GPIO2 = md.in2;

  // card.sensors = {ARDUINO_IO_8,
  //                ARDUINO_IO_7,
  //                ARDUINO_IO_6,
  //                ARDUINO_IO_5,
  //                ARDUINO_IO_4,
  //                ARDUINO_IO_3,
  //                ARDUINO_IO_2,
  //                ARDUINO_IO_1,
  //                ARDUINO_IO_0};

  // .{HEX1, HEX0} = {hex1.trans(processor.accumulator[7:4]), hex0.trans(processor.accumulator[3:0])};
  HEX1 = hex1.trans(processor.accumulator[7:4]);
  HEX0 = hex0.trans(processor.accumulator[3:0]);

  LEDR = 10'(processor.PC);



  func processor.dmem_read {
    return dmem[processor.address];
  }

  func processor.dmem_write {
    dmem[processor.address] := processor.instruction;
  }

  func processor.imem_read {
    // card.send_paper();
    // while posedge of key
    imem_read();
  }

  proc imem_read {
    neg.exec(KEY1);
    if((neg.res)){
        processor.done_imem_read(SW[7:0]);
        finish();
    }
  }

  // func card.on_instruction {
  //   processor.done_imem_read(card.instruction);
  // }
}
